@startuml

skinparam style strictuml
skinparam classAttributeIconSize 0
skinparam classFontStyle Bold
hide enum methods
hide interface attributes

package TrafficLigght.Observer{
    class TrafficLight{
        - isOn: Boolean
        + <<create>> TrafficLight()
        + onOff()
        + switchColor()
        + setStrategy(strategy: SwitchLightStrategy)
        + addObserver(trafficLight: TrafficLight)
        - notifySwitchColor()
        - notifySwitchState()
    }

    enum LightColor{
        + GREEN
        + ORANGE
        + GREEN
    }

    interface SwitchLightStrategy{
        + switchColor(currentColor: LightColor): LightColor
    }

    class SwitchFrance{
        + <<create>> SwitchFrance(currentColor: LightColor): LightColor
        + switchColor()
    }

    class SwitchGermany{
        + <<create>> SwitchGermany(currentColor: LightColor): LightColor
        + switchColor()
    }

    interface "<<interface>>\nTrafficLightObserver" as TrafficLightObserver{
        + updateColor(trafficLight: TrafficLight)
        + updateState(trafficLight: TrafficLight)
    }

    class LightObserver{
        + updateColor(trafficLight: TrafficLight)
        + updateState(trafficLight: TrafficLight)
    }
}

class TrafficLightApp{
    + {static} main(args: String[])
}

SwitchFrance --|> SwitchLightStrategy
SwitchGermany --|> SwitchLightStrategy
SwitchGermany *-> "1\n - lastcolor" LightColor: > owns

TrafficLight *-> "1\n - _strategy" SwitchLightStrategy: > choose
TrafficLight *-> "1\n - color" LightColor: > owns
TrafficLight o-> "*\n - _observers" TrafficLightObserver: < observe

TrafficLightApp ..> "<<uses>>" TrafficLight
TrafficLightApp ..> "<<uses>>" LightColor
TrafficLightApp .> "<<uses>>" SwitchFrance
TrafficLightApp .> "<<uses>>" SwitchGermany

LightObserver .|> "<<implements>>" TrafficLightObserver

@enduml
